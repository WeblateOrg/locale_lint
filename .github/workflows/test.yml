name: Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
        python-version:
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'
        exclude:
        - os: windows-latest
          python-version: '3.10'
        - os: macos-latest
          python-version: '3.10'
        - os: windows-latest
          python-version: '3.11'
        - os: macos-latest
          python-version: '3.11'
    name: ${{ matrix.os }}, Python ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Cache pip
      uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pip dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install -r requirements.txt -r requirements-test.txt
    - name: Install package
      run: pip install -e .
    - name: Test
      run: |
        py.test --cov=locale_lint locale_lint
    - name: Coverage
      run: |
        coverage xml
    - uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5
      with:
        flags: unittests
        name: Python ${{ matrix.python-version }}, ${{ matrix.os }}
permissions:
  contents: read
